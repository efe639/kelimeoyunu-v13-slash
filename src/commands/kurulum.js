const { SlashCommandBuilder } = require("@discordjs/builders");
const { MessageActionRow, MessageButton } = require("discord.js");
const guildDatabase = require('../models/guild');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('kurulum')
        .setDescription('Oyun kurulumunu yapar.')
        .addChannelOption(x => x.setName("kanal").setDescription("Kelime oyunu kanalƒ±.").setRequired(true)),
    run: async (interaction) => {
        if (!interaction.member.permissions.has("ADMINISTRATOR")) return interaction.reply({ content: `Bu i≈ülemi yapabilmek i√ßin yeterli yetkiye sahip deƒüilsin.`, ephemeral: true });
        const channel = interaction.options.getChannel("kanal")
        if (channel.type == "GUILD_TEXT") {
            const row = new MessageActionRow()
                .addComponents(
                    new MessageButton()
                        .setLabel("üü¢")
                        .setStyle("SECONDARY")
                        .setCustomId("btnGameStart"),
                );
            let guildData = await guildDatabase.findOne({ id: interaction.guild.id });
            if (guildData) {
                await guildDatabase.updateOne(
                    {
                        id: interaction.guild.id
                    }, {
                    $set: {
                        game: {
                            channel: channel.id,
                            status: true
                        }
                    }
                });
                return interaction.reply({ content: `Oyun kanalƒ± ${channel} olarak g√ºncellendi. Oyun aktif durumdayken kanalƒ± deƒüi≈ütirdiyseniz mevcut kanaldan oyuna devam edilebilir. Oyunu tekrar ba≈ülatmak isterseniz '/ba≈ülat' kullanabilirsiniz veya a≈üaƒüƒ±daki d√ºƒümeye tƒ±klayarak ba≈ülatabilirsiniz.`, ephemeral: true, components: [row] }).then(async (x) => {
                    let collector = interaction.channel.createMessageComponentCollector({ componentType: 'BUTTON', max: 1, time: 30000 });
                    collector.on("collect", async (button) => {
                        if (button.customId == "btnGameStart") {
                            client.startGame(interaction.guild, channel.id);
                            button.update({ content: `Kelime oyunu ba≈ülatƒ±ldƒ±.`, components: [] });
                        }
                    })
                    collector.on("end", async (button) => {
                    });
                });
            } else {
                await new guildDatabase({
                    id: interaction.guild.id,
                    game: {
                        channel: channel.id,
                        status: false,
                    }
                }).save().catch(() => { });
                return interaction.reply({ content: `Kurulum tamamlandƒ± ve oyun kanalƒ± ${channel} olarak ayarlandƒ±. Oyun kanalƒ±nda '/ba≈ülat' kullanarak veya a≈üaƒüƒ±daki d√ºƒümeye tƒ±klayarak oyunu ba≈ülatabilirsiniz. Oyun sonlandƒ±ƒüƒ±nda otomatik olarak tekrar ba≈ülayacaktƒ±r.`, ephemeral: true, components: [row] }).then(async (x) => {
                    let collector = interaction.channel.createMessageComponentCollector({ componentType: 'BUTTON', max: 1, time: 30000 });
                    collector.on("collect", async (button) => {
                        if (button.customId == "btnGameStart") {
                            client.startGame(interaction.guild, channel.id);
                            button.update({ content: `Kelime oyunu ba≈ülatƒ±ldƒ±.`, components: [] });
                        }
                    })
                    collector.on("end", async (button) => {
                    });
                });
            }
        } else interaction.reply({ content: `Kanal t√ºr√º sadece metin olabilir.`, ephemeral: true });
    },
};
